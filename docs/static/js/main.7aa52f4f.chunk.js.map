{"version":3,"sources":["services/api.js","images/RickMortyLogo.png","components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Main.js","images/dead.png","images/heart.svg","images/question.svg","components/CharacterDetail.js","components/NotFound.js","components/App.js","index.js"],"names":["getApiData","fetch","then","response","json","data","results","map","character","id","name","picture","image","species","planet","location","episodesNumber","episode","length","status","Header","className","src","logo","alt","title","Filters","props","handleInput","event","handleFilter","value","target","onSubmit","preventDefault","htmlFor","type","placeholder","searchedCharacter","onChange","onClick","CharacterCard","CharacterList","characterListItems","characters","to","responseText","Main","mainContent","CharacterDetail","deadIco","aliveIco","questionIco","NotFound","App","useState","setCharacters","setSearchedCharacter","searchedSpecies","setSearchedSpecies","useEffect","charactersData","filteredCharacters","filter","toLowerCase","includes","exact","path","inputInfo","render","routerProps","routeCharacterId","match","params","foundCharacter","find","parseInt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7aa52f4f.chunk.js","sourcesContent":["const ENDPOINT = \"https://rickandmortyapi.com/api/character\";\r\n\r\nconst getApiData = () => {\r\n  return fetch(ENDPOINT)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const cleanData = data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          picture: character.image,\r\n          species: character.species,\r\n          planet: character.location.name,\r\n          episodesNumber: character.episode.length,\r\n          status: character.status,\r\n        };\r\n      });\r\n      return cleanData;\r\n    });\r\n};\r\n\r\nexport default getApiData;\r\n","export default __webpack_public_path__ + \"static/media/RickMortyLogo.de13d484.png\";","import React from \"react\";\r\nimport \"../stylesheets/Header.scss\";\r\nimport logo from \"../images/RickMortyLogo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <img\r\n        className=\"header__img\"\r\n        src={logo}\r\n        alt=\"Rick & Morty Logo\"\r\n        title=\"Buscador de personajes de Rick & Morty\"\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../stylesheets/Filters.scss\";\r\n\r\nconst Filters = (props) => {\r\n  const handleInput = (event) => {\r\n    props.handleFilter({\r\n      value: event.target.value,\r\n      name: event.target.name,\r\n    });\r\n  };\r\n\r\n  const submitPrevent = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <section className=\"search-section\">\r\n      <form className=\"search-section__form\" onSubmit={submitPrevent}>\r\n        <label className=\"form__label\" htmlFor=\"search\">\r\n          ¡Busca tus personajes favoritos de la serie!\r\n        </label>\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"search\"\r\n          type=\"text\"\r\n          name=\"search\"\r\n          placeholder=\"Ej: Albert Einstein\"\r\n          value={props.searchedCharacter}\r\n          onChange={handleInput}\r\n        />\r\n        <label className=\"form__label\" htmlFor=\"species\">\r\n          Especies\r\n        </label>\r\n\r\n        <select\r\n          className=\"form__input\"\r\n          name=\"species\"\r\n          id=\"species\"\r\n          onClick={handleInput}\r\n        >\r\n          <option value=\"\">Todas</option>\r\n          <option value=\"Human\">Human</option>\r\n          <option value=\"Alien\">Alien</option>\r\n        </select>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../stylesheets/CharacterCard.scss\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <article className=\"article\">\r\n      <img\r\n        className=\"article__img\"\r\n        src={props.character.picture}\r\n        alt={props.character.name}\r\n        title={props.character.name}\r\n      />\r\n      <h2 className=\"article__name\">{props.character.name}</h2>{\" \"}\r\n      <h5 className=\"article__species\">{props.character.species}</h5>\r\n    </article>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  character: PropTypes.shape({\r\n    picture: PropTypes.string,\r\n    name: PropTypes.string,\r\n    species: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../stylesheets/CharacterList.scss\";\r\nimport CharacterCard from \"./CharacterCard\";\r\n\r\nconst CharacterList = (props) => {\r\n  const characterListItems = props.characters.map((character) => {\r\n    return (\r\n      <li className=\"card\" key={character.id}>\r\n        <Link to={`/characterDetail/${character.id}`}>\r\n          <CharacterCard character={character} />\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className=\"characters-section\">\r\n      {props.responseText}\r\n      <ul className=\"characters-section__list\">{characterListItems}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n\r\nCharacterList.propTypes = { characters: PropTypes.array };\r\n","import React from \"react\";\r\nimport \"../stylesheets/Main.scss\";\r\nimport Filters from \"./Filters\";\r\nimport CharacterList from \"./CharacterList\";\r\n\r\nconst Main = (props) => {\r\n  const mainContent =\r\n    props.characters.length > 0 ? (\r\n      <CharacterList characters={props.characters} />\r\n    ) : (\r\n      <p className=\"response-text\">\r\n        {`No hay ningún personaje que coincida con la palabra \"${props.searchedCharacter}\"`}\r\n      </p>\r\n    );\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <Filters\r\n        searchedCharacter={props.searchedCharacter}\r\n        handleFilter={props.handleFilter}\r\n      />\r\n      {mainContent}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/dead.5b204c98.png\";","export default __webpack_public_path__ + \"static/media/heart.b4f912ce.svg\";","export default __webpack_public_path__ + \"static/media/question.d2b15a30.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/CharacterDetail.scss\";\r\nimport Header from \"./Header\";\r\nimport deadIco from \"../images/dead.png\";\r\nimport aliveIco from \"../images/heart.svg\";\r\nimport questionIco from \"../images/question.svg\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const statusIcon = () => {\r\n    if (props.character.status === \"Dead\") {\r\n      return (\r\n        <img\r\n          className=\"status-icon\"\r\n          src={deadIco}\r\n          alt=\"dead icon\"\r\n          title=\"dead\"\r\n        />\r\n      );\r\n    } else if (props.character.status === \"Alive\") {\r\n      return (\r\n        <img\r\n          className=\"status-icon\"\r\n          src={aliveIco}\r\n          alt=\"alive icon\"\r\n          title=\"alive\"\r\n        />\r\n      );\r\n    } else if (props.character.status === \"unknown\") {\r\n      return (\r\n        <img\r\n          className=\"status-icon\"\r\n          src={questionIco}\r\n          alt=\"unknown icon\"\r\n          title=\"unknown\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <main className=\"main-detail\">\r\n        <Link to=\"/\" className=\"home-link\">\r\n          <i className=\"fas fa-angle-double-left\"></i> Volver\r\n        </Link>\r\n        <article className=\"article\">\r\n          <img\r\n            className=\"article__img\"\r\n            src={props.character.picture}\r\n            alt={props.character.name}\r\n          />\r\n          <ul>\r\n            <li>\r\n              <h2>{props.character.name}</h2>\r\n            </li>\r\n            <li>Status: {statusIcon()}</li>\r\n            <li>Species: {props.character.species}</li>\r\n            <li>Origin: {props.character.planet}</li>\r\n            <li>Episodes number: {props.character.episodesNumber}</li>\r\n          </ul>\r\n        </article>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  character: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    picture: PropTypes.string,\r\n    species: PropTypes.string,\r\n    planet: PropTypes.string,\r\n    episodesNumber: PropTypes.number,\r\n    status: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/NotFound.scss\";\r\nimport Header from \"./Header\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className=\"main-not-found\">\r\n        <Link to=\"/\" className=\"home-link\">\r\n          <i className=\"fas fa-angle-double-left\"></i> Volver\r\n        </Link>\r\n        <p className=\"message\">El personaje que buscas no existe.</p>;\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"../stylesheets/App.scss\";\nimport getApiData from \"../services/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport NotFound from \"./NotFound\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searchedCharacter, setSearchedCharacter] = useState(\"\");\n  const [searchedSpecies, setSearchedSpecies] = useState(\"\");\n\n  useEffect(() => {\n    getApiData().then((charactersData) => {\n      setCharacters(charactersData);\n    });\n  }, []);\n\n  const handleFilter = (inputInfo) => {\n    if (inputInfo.name === \"search\") {\n      setSearchedCharacter(inputInfo.value);\n    } else {\n      setSearchedSpecies(inputInfo.value);\n    }\n  };\n\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name\n        .toLowerCase()\n        .includes(searchedCharacter.toLowerCase());\n    })\n    .filter((character) => {\n      return character.species.includes(searchedSpecies);\n    });\n\n  const renderCharacterDetail = (routerProps) => {\n    const routeCharacterId = routerProps.match.params.id;\n    const foundCharacter = characters.find(\n      (character) => character.id === parseInt(routeCharacterId)\n    );\n\n    if (foundCharacter) {\n      return <CharacterDetail character={foundCharacter} />;\n    } else {\n      return <NotFound />;\n    }\n  };\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div className=\"App\">\n          <Header />\n          <Main\n            characters={filteredCharacters}\n            searchedCharacter={searchedCharacter}\n            handleFilter={handleFilter}\n          />\n        </div>\n      </Route>\n      <Route path=\"/characterDetail/:id\" render={renderCharacterDetail} />\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.scss\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}