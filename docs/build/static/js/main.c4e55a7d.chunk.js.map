{"version":3,"sources":["services/api.js","images/RickMortyLogo.png","components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Main.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["getApiData","fetch","then","response","json","data","results","map","character","id","name","picture","image","species","planet","location","episodesNumber","episode","length","status","console","log","Header","src","logo","alt","title","Filters","props","onSubmit","event","preventDefault","htmlFor","type","placeholder","value","searchedCharacter","onChange","handleFilter","target","CharacterCard","CharacterList","characterListItems","characters","to","Main","CharacterDetail","App","useState","setCharacters","setSearchedCharacter","useEffect","charactersData","filteredCharacters","filter","toLowerCase","includes","exact","path","className","userData","render","routerProps","routeCharacterId","match","params","foundCharacter","find","parseInt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c4e55a7d.chunk.js","sourcesContent":["const ENDPOINT = \"https://rickandmortyapi.com/api/character\";\r\n\r\nconst getApiData = () => {\r\n  return fetch(ENDPOINT)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const cleanData = data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          picture: character.image,\r\n          species: character.species,\r\n          planet: character.location.name,\r\n          episodesNumber: character.episode.length,\r\n          status: character.status,\r\n        };\r\n      });\r\n      return cleanData;\r\n    });\r\n};\r\n\r\nconsole.log(getApiData());\r\n\r\nexport default getApiData;\r\n","export default __webpack_public_path__ + \"static/media/RickMortyLogo.de13d484.png\";","import React from \"react\";\r\nimport logo from \"../images/RickMortyLogo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <img\r\n        src={logo}\r\n        alt=\"Rick & Morty Logo\"\r\n        title=\"Buscador de personajes de Rick & Morty\"\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Filters = (props) => {\r\n  const handleSearchInput = (event) => {\r\n    props.handleFilter(event.target.value);\r\n  };\r\n\r\n  const submitPrevent = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <form onSubmit={submitPrevent}>\r\n        <label htmlFor=\"search\">\r\n          Â¡Busca tus personajes favoritos de la serie!\r\n        </label>\r\n        <input\r\n          id=\"search\"\r\n          type=\"text\"\r\n          name=\"search\"\r\n          placeholder=\"Ej: Albert Einstein\"\r\n          value={props.searchedCharacter}\r\n          onChange={handleSearchInput}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CharacterCard = (props) => {\r\n  console.log(props.character);\r\n  return (\r\n    <article>\r\n      <img\r\n        src={props.character.picture}\r\n        alt={props.character.name}\r\n        title={props.character.name}\r\n      />\r\n      <h3>{props.character.name}</h3> <h5>{props.character.species}</h5>\r\n    </article>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  character: PropTypes.shape({\r\n    picture: PropTypes.string,\r\n    name: PropTypes.string,\r\n    species: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport CharacterCard from \"./CharacterCard\";\r\n\r\nconst CharacterList = (props) => {\r\n  const characterListItems = props.characters.map((character) => {\r\n    return (\r\n      <li key={character.id}>\r\n        <Link to={`/characterDetail/${character.id}`}>\r\n          <CharacterCard character={character} />\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <ul> {characterListItems}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n\r\nCharacterList.propTypes = { characters: PropTypes.array };\r\n","import React from \"react\";\r\nimport Filters from \"./Filters\";\r\nimport CharacterList from \"./CharacterList\";\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <main>\r\n      <Filters\r\n        searchedCharacter={props.searchedCharacter}\r\n        handleFilter={props.handleFilter}\r\n      />\r\n      <CharacterList characters={props.characters} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  console.log(props.character);\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Regresar al buscador</Link>\r\n      <header>\r\n        <h2>{props.character.name}</h2>\r\n      </header>\r\n      <section>\r\n        <img src={props.character.picture} alt={props.character.name} />\r\n        <h4>{props.character.name}</h4>\r\n        <ul>\r\n          <li>Species: {props.character.species}</li>\r\n          <li>Origin: {props.character.planet}</li>\r\n          <li>Episodes number: {props.character.episodesNumber}</li>\r\n          <li>Status: {props.character.status}</li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  character: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    picture: PropTypes.string,\r\n    species: PropTypes.string,\r\n    //planet: propTypes.string,\r\n    episodesNumber: PropTypes.number,\r\n    status: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"../stylesheets/App.scss\";\nimport getApiData from \"../services/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport CharacterDetail from \"./CharacterDetail\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searchedCharacter, setSearchedCharacter] = useState(\"\");\n\n  useEffect(() => {\n    getApiData().then((charactersData) => {\n      setCharacters(charactersData);\n    });\n  }, []);\n\n  const handleFilter = (userData) => {\n    setSearchedCharacter(userData);\n    console.log(searchedCharacter);\n  };\n\n  const filteredCharacters = characters.filter((character) => {\n    return character.name\n      .toLowerCase()\n      .includes(searchedCharacter.toLowerCase());\n  });\n\n  const renderCharacterDetail = (routerProps) => {\n    const routeCharacterId = routerProps.match.params.id;\n    const foundCharacter = characters.find(\n      (character) => character.id === parseInt(routeCharacterId)\n    );\n    console.log(foundCharacter);\n    console.log(routeCharacterId);\n\n    if (foundCharacter) {\n      return <CharacterDetail character={foundCharacter} />;\n    } else {\n      return <p>El personaje que buscas no existe.</p>;\n    }\n  };\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div className=\"App\">\n          <Header />\n          <Main\n            characters={filteredCharacters}\n            searchedCharacter={searchedCharacter}\n            handleFilter={handleFilter}\n          />\n        </div>\n      </Route>\n      <Route path=\"/characterDetail/:id\" render={renderCharacterDetail} />\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.scss\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}